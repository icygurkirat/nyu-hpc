Compiler - gcc 7.4.0
Processor - Intel i7-6700HQ @ 2.6GHz . 4 cores with hyperthreading.


Question 2:-
Run 'make mmult-seq' for compiling without openmp. Run 'make mmult' or 'make' to compile with openmp.
For multithreaded version, specify the number of threads as the first argument of executable. Example: "./MMult1 4" for 4 threads.

SIMULATION 1: threads = 1, BLOCK_SIZE = 4
 Dimension       Time    Gflop/s       GB/s        Error      NREPEATS
         4   1.473995   1.356857  13.568566 0.000000e+00      15625001
        52   1.123421   1.780285  14.516167 0.000000e+00          7112
       100   1.101219   1.817986  14.689326 0.000000e+00          1001
       148   1.097590   1.825297  14.701043 0.000000e+00           309
       196   1.089241   1.838764  14.785166 0.000000e+00           133
       244   1.133247   1.768984  14.209872 0.000000e+00            69
       292   1.109128   1.840691  14.775954 0.000000e+00            41
       340   1.107799   1.844927  14.802828 0.000000e+00            26
       388   1.145957   1.834972  14.717613 0.000000e+00            18
       436   1.181483   1.823919  14.624816 0.000000e+00            13
       484   1.121475   1.819780  14.588323 0.000000e+00             9
       532   1.166801   1.806617  14.480105 0.000000e+00             7
       580   1.329198   1.761472  14.116070 0.000000e+00             6
       628   1.388629   1.783580  14.291364 0.000000e+00             5
       676   1.394012   1.772815  14.203501 0.000000e+00             4


SIMULATION 2: threads = 1, BLOCK_SIZE = 8
 Dimension       Time    Gflop/s       GB/s        Error      NREPEATS
         8   0.754799   2.649714  23.847424 0.000000e+00       1953126
        56   0.638958   3.130512  25.491311 0.000000e+00          5695
       104   0.629878   3.175233  25.646109 0.000000e+00           889
       152   0.629304   3.180864  25.614327 0.000000e+00           285
       200   0.627077   3.214914  25.847910 0.000000e+00           126
       248   0.627706   3.207545  25.763825 0.000000e+00            66
       296   0.635192   3.184672  25.563449 0.000000e+00            39
       344   0.631961   3.220735  25.840780 0.000000e+00            25
       392   0.636971   3.215272  25.787790 0.000000e+00            17
       440   0.669089   3.055524  24.499747 0.000000e+00            12
       488   0.671525   3.115084  24.971740 0.000000e+00             9
       536   0.692810   3.111778  24.940666 0.000000e+00             7
       584   0.800880   2.984369  23.915830 0.000000e+00             6
       632   0.671704   3.006517  24.090190 0.000000e+00             4
       680   0.841537   2.989122  23.948141 0.000000e+00             4

SIMULATION 3: threads = 1, BLOCK_SIZE = 12
 Dimension       Time    Gflop/s       GB/s        Error      NREPEATS
        12   0.730534   2.737723  23.726935 0.000000e+00        578704
        60   0.647628   3.088442  25.119325 0.000000e+00          4630
       108   0.643594   3.108204  25.095869 0.000000e+00           794
       156   0.642824   3.118285  25.106190 0.000000e+00           264
       204   0.639207   3.134445  25.198483 0.000000e+00           118
       252   0.639900   3.151086  25.308719 0.000000e+00            63
       300   0.652262   3.145977  25.251713 0.000000e+00            38
       348   0.647930   3.122132  25.048827 0.000000e+00            24
       396   0.674699   3.129352  25.098038 0.000000e+00            17
       444   0.687190   3.056913  24.510383 0.000000e+00            12
       492   0.714494   3.000331  24.051434 0.000000e+00             9
       540   0.726820   3.033072  24.309508 0.000000e+00             7
       588   0.683787   2.973113  23.825357 0.000000e+00             5
       636   0.713021   2.886415  23.127627 0.000000e+00             4
       684   0.878885   2.912904  23.337305 0.000000e+00             4

SIMULATION 4: threads = 1, BLOCK_SIZE = 16
 Dimension       Time    Gflop/s       GB/s        Error      NREPEATS
        16   0.819787   2.439662  20.737128 0.000000e+00        244141
        64   0.824793   2.425043  19.703477 0.000000e+00          3815
       112   0.694022   2.882642  23.267042 0.000000e+00           712
       160   0.875120   2.293446  18.462240 0.000000e+00           245
       208   0.783498   2.572766  20.681084 0.000000e+00           112
       256   0.677326   2.972374  23.871883 0.000000e+00            60
       304   0.691544   2.925053  23.477399 0.000000e+00            36
       352   0.669644   2.996002  24.036111 0.000000e+00            23
       400   0.677728   3.021861  24.235324 0.000000e+00            16
       448   0.793164   2.720710  21.814260 0.000000e+00            12
       496   0.724497   3.031662  24.302196 0.000000e+00             9
       544   0.810496   2.780827  22.287507 0.000000e+00             7
       592   0.725171   2.861047  22.927036 0.000000e+00             5
       640   0.699218   2.999282  24.031747 0.000000e+00             4
       688   0.851367   3.060121  24.516547 0.000000e+00             4

After experimenting with different values of BLOCK_SIZE for sequential execution, we get best speed and bandwidth at blocksize of 8
Optimal BLOCK_SIZE = 8
Highest bandwidth obtained = 25.847910 GB/s   for Dimension = 200.


Simulations for OpenMP implementations at block size of 8

SIMULATION 1: threads = 1, BLOCK_SIZE = 8
 Dimension       Time    Gflop/s       GB/s        Error      NREPEATS
         8   6.799329   0.294147   2.647321 0.000000e+00       1953126
        56   0.704627   2.838758  23.115599 0.000000e+00          5695
       104   0.681313   2.935521  23.709976 0.000000e+00           889
       152   0.673648   2.971479  23.928222 0.000000e+00           285
       200   0.719590   2.801594  22.524814 0.000000e+00           126
       248   0.675630   2.980026  23.936334 0.000000e+00            66
       296   0.678393   2.981866  23.935522 0.000000e+00            39
       344   0.750499   2.712034  21.759344 0.000000e+00            25
       392   0.691944   2.959828  23.739029 0.000000e+00            17
       440   0.688360   2.969980  23.813836 0.000000e+00            12
       488   0.708970   2.950559  23.652841 0.000000e+00             9
       536   0.750861   2.871197  23.012429 0.000000e+00             7
       584   0.825646   2.894850  23.198458 0.000000e+00             6
       632   0.705524   2.862394  22.935386 0.000000e+00             4
       680   0.901416   2.790560  22.357310 0.000000e+00             4

SIMULATION 2: threads = 2, BLOCK_SIZE = 8
 Dimension       Time    Gflop/s       GB/s        Error      NREPEATS
         8  10.357150   0.193103   1.737931 0.000000e+00       1953126
        56   0.468732   4.267400  34.748831 0.000000e+00          5695
       104   0.383390   5.216646  42.134445 0.000000e+00           889
       152   0.381050   5.253203  42.302112 0.000000e+00           285
       200   0.368804   5.466318  43.949198 0.000000e+00           126
       248   0.359508   5.600419  44.984012 0.000000e+00            66
       296   0.359813   5.622023  45.128133 0.000000e+00            39
       344   0.358611   5.675727  45.537808 0.000000e+00            25
       392   0.360148   5.686653  45.609277 0.000000e+00            17
       440   0.358074   5.709482  45.779667 0.000000e+00            12
       488   0.367066   5.698855  45.684261 0.000000e+00             9
       536   0.379333   5.683314  45.551339 0.000000e+00             7
       584   0.420786   5.680138  45.518917 0.000000e+00             6
       632   0.360286   5.605234  44.912821 0.000000e+00             4
       680   0.466304   5.394455  43.219105 0.000000e+00             4

SIMULATION 3: threads = 4, BLOCK_SIZE = 8
 Dimension       Time    Gflop/s       GB/s        Error      NREPEATS
         8  10.711575   0.186714   1.680426 0.000000e+00       1953126
        56   0.244648   8.176102  66.576832 0.000000e+00          5695
       104   0.264047   7.574446  61.178217 0.000000e+00           889
       152   0.205242   9.753016  78.537449 0.000000e+00           285
       200   0.200246  10.067632  80.943761 0.000000e+00           126
       248   0.190786  10.553170  84.765783 0.000000e+00            66
       296   0.194204  10.416281  83.611768 0.000000e+00            39
       344   0.188783  10.781592  86.503474 0.000000e+00            25
       392   0.204323  10.023511  80.392648 0.000000e+00            17
       440   0.193979  10.539368  84.506566 0.000000e+00            12
       488   0.192462  10.868929  87.129611 0.000000e+00             9
       536   0.197021  10.942343  87.702063 0.000000e+00             7
       584   0.267178   8.945785  71.688823 0.000000e+00             6
       632   0.187056  10.796184  86.506132 0.000000e+00             4
       680   0.243297  10.339051  82.834045 0.000000e+00             4
       728   0.208651  11.094966  88.881647 0.000000e+00             3

SIMULATION 4: threads = 8, BLOCK_SIZE = 8
 Dimension       Time    Gflop/s       GB/s        Error      NREPEATS
         8  11.572919   0.172817   1.555356 0.000000e+00       1953126
        56   0.252589   7.919049  64.483684 0.000000e+00          5695
       104   0.244024   8.195959  66.198129 0.000000e+00           889
       152   0.218023   9.181282  73.933478 0.000000e+00           285
       200   0.211866   9.515435  76.504097 0.000000e+00           126
       248   0.192719  10.447314  83.915526 0.000000e+00            66
       296   0.197326  10.251437  82.288565 0.000000e+00            39
       344   0.203584   9.997746  80.214477 0.000000e+00            25
       392   0.244656   8.371092  67.139578 0.000000e+00            17
       440   0.198536  10.297478  82.567052 0.000000e+00            12
       488   0.200399  10.438460  83.678800 0.000000e+00             9
       536   0.207647  10.382356  83.213807 0.000000e+00             7
       584   0.221860  10.773092  86.332316 0.000000e+00             6
       632   0.190387  10.607305  84.992713 0.000000e+00             4
       680   0.240869  10.443258  83.668924 0.000000e+00             4

There is not much improvement on increasing threads from 4 to 8. The reason is that my machine has 4 cores with hyperthreading.
So even if there are 8 virtual CPUs, there are only 4 L1, L2 caches. This is because 2 vCPUs share a cache.
Hence the matrix block spills from the cache, thereby not providing a huge increase in bandwidth.







Question 4:-
Run 'make' to compile. The executable takes 2 arguments:
1. N
2. Number of threads. If you do not provide second argument, default openmp value is chosen.

For getting the simulation results, all the printing was suppressed. Also tabulating the reduction observed in the residual norm.

SIMULATION 1: Jacobi-2D. Iterations = 5000
N           threads=1       threads=2       threads=4       threads=8       Reduction in residual norm
50          0.346460s       0.212998s       0.135288s       0.131460s       16045.910103
100         1.420299s       0.741730s       0.400251s       0.357916s       13.727524
200         5.172727s       2.797644s       1.690947s       1.453780s       2.259144
400         20.876540s      10.906786s      6.043636s       5.183667s       1.388131

SIMULATION 2: GaussSiedel-2D. Iterations = 5000 (except for N=50)
N           threads=1       threads=2       threads=4       threads=8       Reduction in residual norm
50          0.266267s       0.191814s       0.152223s       0.137227s       1079511.659083 (converges in 3700 iterations)
100         1.369003s       0.790070s       0.462485s       0.451493s       109.045039
200         5.667761s       3.138616s       1.779775s       1.520563s       2.944490
400         25.027450s      13.545799s      8.174914s       7.387630s       1.171536
